////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для обращения с гитом.
//  
////////////////////////////////////////////////////////////////////////////////
#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьДанныеГита(ИмяМетодаАпи, ДопПараметры = Неопределено, НастройкиГита = Неопределено) Экспорт
	
	Таймаут 	= 60;
	КодУспех 	= 200;
	Ответ 		= Новый Структура("Успех, Результат", Ложь, "");

	Если НастройкиГита = Неопределено Тогда
		НастройкиГита = SslCI_СлужебныйВызовСервера.ПолучитьТекущиеНастройкиИнтеграции();
	КонецЕсли;
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = Новый Структура;
	КонецЕсли;
	
	АдресГита = НастройкиГита.АдресГита;
	
	Попытка
		Соединение = Новый HTTPСоединение(АдресГита, , , , , Таймаут, Новый ЗащищенноеСоединениеOpenSSL);
	Исключение
		Ответ.Вставить("Результат", "Не удалось установить соединение"); 
		
		Возврат Ответ;
	КонецПопытки;
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type",  "application/json"); 
	
	ВызываемыйМетод = "/api/v4/" + ИмяМетодаАпи + "?access_token=" + НастройкиГита.ТокенДоступа;
	
	Для Каждого КлючИЗначение Из ДопПараметры Цикл
		ВызываемыйМетод = ВызываемыйМетод + "&" + КлючИЗначение.Ключ + "=" + КлючИЗначение.Значение;	
	КонецЦикла;
	
	Запрос = Новый HTTPЗапрос(ВызываемыйМетод);
	
	Попытка
		Результат = Соединение.Получить(Запрос);
		РезультатСтрокой = Результат.ПолучитьТелоКакСтроку();
		Соединение = Неопределено;
	Исключение		
		Ответ.Вставить("Результат", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())); 
		
		Возврат Ответ;
	КонецПопытки;

	Если Результат.КодСостояния = КодУспех Тогда
		Ответ.Вставить("Успех", 	Истина);
		Ответ.Вставить("Результат", РезультатСтрокой);
		Ответ.Вставить("Заголовки", Результат.Заголовки);
	Иначе		
		Ответ.Вставить("Результат", РезультатСтрокой);
	КонецЕсли;	
	
	Возврат Ответ;
	
КонецФункции

Функция ДанныеГитаСтруктурой(ДанныеJSON, ПрочитатьВСоответствие = Ложь, ПоляДат = "") Экспорт

	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ДанныеJSON);
	СтруктураДанных = ПрочитатьJSON(ЧтениеJSON, ПрочитатьВСоответствие, ПоляДат, ФорматДатыJSON.ISO);
	ЧтениеJSON.Закрыть();	
	
	Возврат СтруктураДанных;
	
КонецФункции

Функция СписокВеток(ИдПроекта) Экспорт

	Ответ = Новый Структура("Успех, ОписаниеВеток", Ложь);
	
	Если Не SslCI_НастройкаИнтеграцииСГитомПовтИсп.СоединениеСГитомУстановлено() Тогда
		Возврат Ответ;	
	КонецЕсли;
	
	ДанныеГита = ПолучитьДанныеГита("projects/" + ИдПроекта + "/repository/branches");
	
	Если ДанныеГита.Успех Тогда
		Ответ.Вставить("Успех", Истина);
		Ответ.Вставить("ОписаниеВеток", ДанныеГитаСтруктурой(ДанныеГита.Результат));
	Иначе
		Ответ.Вставить("Результат", ДанныеГита.Результат);
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

#КонецОбласти