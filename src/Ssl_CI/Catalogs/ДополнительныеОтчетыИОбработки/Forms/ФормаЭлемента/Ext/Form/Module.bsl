#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура SslCI_ОбработкаВыбораПосле(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.ДополнительныеОтчетыИОбработки.Форма.SslCI_ВыборФайлаИзРепозитория" Тогда
		Объект.SslCI_АдресВРепозитории = ВыбранноеЗначение.ПолныйПутьКФайлу;
		Объект.SslCI_ИмяВетки = ВыбранноеЗначение.Ветка;
		
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			
			ЗаполнитьЗначенияСвойств(Объект, ПустаяСтруктураКоммита());
			
			Модифицированность = Истина;
			
			Оповещение = Новый ОписаниеОповещения("SslCI_ВыборФайлаПродолжение", ЭтотОбъект);
			ТекстВопроса = НСтр("ru = 'Обновить обработку/отчет на последнюю версию?'"); 
			Заголовок = НСтр("ru = 'Обновление'");
			
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да, Заголовок);
		Иначе
			ПараметрыРегистрации = Новый Структура;
			ПараметрыРегистрации.Вставить("Успех", Ложь);
			ПараметрыРегистрации.Вставить("АдресДанныхОбработки", АдресДанныхОбработки);
			
			ДанныеФайла 	= SslCI_РаботаПоАпи.ПолучитьФайлИзРепозитория(Объект.SslCI_АдресВРепозитории, Объект.SslCI_ИмяВетки);
			ДанныеКоммита 	= SslCI_РаботаПоАпи.ДанныеКоммита(ДанныеФайла.СтруктураФайла.last_commit_id);			
			ОписаниеКоммита = SslCI_РаботаПоАпи.ОписаниеКоммита(ДанныеКоммита.СтруктураФайла);
			
			ЗаполнитьЗначенияСвойств(Объект, ОписаниеКоммита);			
			
			ДвоичныеДанные 	= Base64Значение(ДанныеФайла.СтруктураФайла.content);
			АдресДанных 	= ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
			ИмяФайла 		= ДанныеФайла.СтруктураФайла.file_name;
							
			ОписаниеФайла = Новый Структура;
			ОписаниеФайла.Вставить("Хранение", АдресДанных);
			ОписаниеФайла.Вставить("Имя", ИмяФайла);
			
			Если ЭтоНоваяБСП() Тогда
				Обработчик = Новый ОписаниеОповещения("ОбновитьИзФайлаПослеВыбораФайла", ЭтотОбъект, ПараметрыРегистрации);				
				
				ПомещенныеФайлы = ОписаниеФайла;
			Иначе
				Обработчик = Новый ОписаниеОповещения("ОбновлениеИзФайлаПослеВыбораФайла", ЭтотОбъект, ПараметрыРегистрации);				
				
				ПомещенныеФайлы = Новый Массив;
				ПомещенныеФайлы.Добавить(ОписаниеФайла);
			КонецЕсли;
			
			ВыполнитьОбработкуОповещения(Обработчик, ПомещенныеФайлы);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура SslCI_ВыборФайлаПродолжение(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Записать();
		SslCI_РаботаПоАпи.ОбновитьИзРепозитория(Объект.Ссылка, Истина);
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура SslCI_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ИзРепозитория") Тогда
		sslИзРепозитория 	= Истина;
		Объект.Родитель 	= Параметры.Родитель;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура SslCI_ПриОткрытииПосле(Отказ)
	ВидимостьРучногоДобавленияФайлов();
КонецПроцедуры

&НаСервере
Процедура SslCI_ПриЧтенииНаСервереПосле(ТекущийОбъект)
	ЗаполнитьКоманды();
КонецПроцедуры

&НаКлиенте
Процедура SslCI_ОбработкаОповещенияПосле(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновлениеНастроекГита" Тогда
		ВидимостьРучногоДобавленияФайлов();	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура SslCI_SslCI_АдресВРепозиторииНачалоВыбораВместо(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыПодбора = Новый Структура;
	
	Если ЗначениеЗаполнено(Объект.Вид) Тогда
		ПараметрыПодбора.Вставить("ВидОбработки", Объект.Вид);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.SslCI_АдресВРепозитории) Тогда
		ПараметрыПодбора.Вставить("ТекущийАдрес", Объект.SslCI_АдресВРепозитории);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.SslCI_ИмяВетки) Тогда
		ПараметрыПодбора.Вставить("Ветка", Объект.SslCI_ИмяВетки);
	КонецЕсли;
	
	ОткрытьФорму("Справочник.ДополнительныеОтчетыИОбработки.Форма.SslCI_ВыборФайлаИзРепозитория", 
		ПараметрыПодбора, ЭтотОбъект, Истина, , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура SslCI_ЗадачаВТаскТрекереНажатиеВместо(Элемент)
	SslCI_РаботаПоАпи.ОткрытьЗадачуВТрекере(Объект.SslCI_СообщениеКоммита);
КонецПроцедуры

&НаКлиенте
Процедура SslCI_КоммитНажатиеВместо(Элемент)
	SslCI_РаботаПоАпи.ОткрытьКоммит(Объект.SslCI_ИДКоммита);
КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("ОбновлениеИзФайлаЗавершение")
Процедура SslCI_ОбновлениеИзФайлаЗавершение(ПустойРезультат, ПараметрыРегистрации) Экспорт
	Если ПараметрыРегистрации = Неопределено Или ПараметрыРегистрации.Успех = Ложь Тогда
		Если ПоказатьДиалогЗагрузкиИзФайлаПриОткрытии И Открыта() Тогда
			Закрыть();
		КонецЕсли;
	ИначеЕсли ПараметрыРегистрации.Успех = Истина Тогда
		Если Не Открыта() Тогда
			Открыть();
		КонецЕсли;
		Модифицированность = Истина;
		РегистрацияОбработки = Истина;
		АдресДанныхОбработки = ПараметрыРегистрации.АдресДанныхОбработки;
		#Вставка
		Если sslИзРепозитория = Ложь Тогда
			ЗаполнитьЗначенияСвойств(Объект, ПустаяСтруктураКоммита());
			Объект.SslCI_НеОбновлятьАвтоматически = Истина;
		КонецЕсли;
		#КонецВставки
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("ОбновитьИзФайлаЗавершение")
Процедура SslCI_ОбновитьИзФайлаЗавершение(ПустойРезультат, ПараметрыРегистрации) Экспорт
	Если ПараметрыРегистрации = Неопределено Или ПараметрыРегистрации.Успех = Ложь Тогда
		Если ПоказатьДиалогЗагрузкиИзФайлаПриОткрытии И Открыта() Тогда
			Закрыть();
		КонецЕсли;
	ИначеЕсли ПараметрыРегистрации.Успех = Истина Тогда
		Если Не Открыта() Тогда
			Открыть();
		КонецЕсли;
		Модифицированность = Истина;
		РегистрацияОбработки = Истина;
		АдресДанныхОбработки = ПараметрыРегистрации.АдресДанныхОбработки;
		#Вставка
		Если sslИзРепозитория = Ложь Тогда
			ЗаполнитьЗначенияСвойств(Объект, ПустаяСтруктураКоммита());
			Объект.SslCI_НеОбновлятьАвтоматически = Истина;
		КонецЕсли;
		#КонецВставки
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПустаяСтруктураКоммита()
	
	Ответ = Новый Структура;
	Ответ.Вставить("SslCI_АвторКоммита", "");
	Ответ.Вставить("SslCI_ИДКоммита", "");
	Ответ.Вставить("SslCI_СообщениеКоммита", "");
	Ответ.Вставить("SslCI_ДатаКоммита", '00010101');
	
	Возврат Ответ;
	
КонецФункции

&НаКлиенте
&ИзменениеИКонтроль("ОбновлениеИзФайлаЗапуск")
Процедура SslCI_ОбновлениеИзФайлаЗапуск()
	#Вставка
	Если sslИзРепозитория Тогда
		Оповещение = Новый ОписаниеОповещения("СозданиеИзРепозиторияПродолжение", ЭтотОбъект);
		
		ОткрытьФорму("Справочник.ДополнительныеОтчетыИОбработки.Форма.SslCI_ВыборФайлаИзРепозитория", , 
			ЭтотОбъект, Истина, , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
		Возврат;
	КонецЕсли;
	#КонецВставки
	Оповещение = Новый ОписаниеОповещения("ОбновлениеИзФайлаПослеПодтверждения", ЭтотОбъект);
	ПараметрыФормы = Новый Структура("Ключ", "ПередДобавлениемДополнительногоОтчетаИлиОбработки");
	ОткрытьФорму("ОбщаяФорма.ПредупреждениеБезопасности", ПараметрыФормы, , , , , Оповещение);
КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("ОбновитьИзФайла")
Процедура SslCI_ОбновитьИзФайла()
	#Вставка
	Если sslИзРепозитория Тогда
		Оповещение = Новый ОписаниеОповещения("СозданиеИзРепозиторияПродолжение", ЭтотОбъект);
		
		ОткрытьФорму("Справочник.ДополнительныеОтчетыИОбработки.Форма.SslCI_ВыборФайлаИзРепозитория", , 
			ЭтотОбъект, Истина, , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
		Возврат;
	КонецЕсли;
	#КонецВставки
	Оповещение = Новый ОписаниеОповещения("ОбновитьИзФайлаПослеПодтверждения", ЭтотОбъект);
	ПараметрыФормы = Новый Структура("Ключ", "ПередДобавлениемДополнительногоОтчетаИлиОбработки");
	ОткрытьФорму("ОбщаяФорма.ПредупреждениеБезопасности", ПараметрыФормы, , , , , Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура СозданиеИзРепозиторияПродолжение(Результат, ДопПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПеречитатьДанныеФормы() Экспорт
	Прочитать();	
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьРучногоДобавленияФайлов()
	
	СоединениеСГитомУстановлено = SslCI_НастройкаИнтеграцииСГитомПовтИсп.СоединениеСГитомУстановлено();
	РучноеДобавлениеФайлов = Не СоединениеСГитомУстановлено Или SslCI_НастройкаИнтеграцииСГитомПовтИсп.РучноеДобавлениеФайлов();
	
	Элементы.ЗагрузитьИзФайла.Видимость = РучноеДобавлениеФайлов;
	Элементы.СтраницаДанныеГита.Видимость = СоединениеСГитомУстановлено;
	Элементы.ФормаГруппаРепозиторий.Видимость = СоединениеСГитомУстановлено;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоНоваяБСП()
	
	ВерсияБСП = СтандартныеПодсистемыСервер.ВерсияБиблиотеки();
	
	Если СтрНачинаетсяС(ВерсияБСП, "3.1") Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#КонецОбласти